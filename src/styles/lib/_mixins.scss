@mixin shadow($z-depth: 1, $strength: 1, $color: black) {
    @if $z-depth == 1 {
        box-shadow: 0 1px 3px rgba($color, $strength * 0.14), 0 1px 2px rgba($color, $strength * 0.24);
    }

    @if $z-depth == 2 {
        box-shadow: 0 3px 6px rgba($color, $strength * 0.16), 0 3px 6px rgba($color, $strength * 0.23);
    }

    @if $z-depth == 3 {
        box-shadow: 0 10px 20px rgba($color, $strength * 0.19), 0 6px 6px rgba($color, $strength * 0.23);
    }

    @if $z-depth == 4 {
        box-shadow: 0 15px 30px rgba($color, $strength * 0.25), 0 10px 10px rgba($color, $strength * 0.22);
    }

    @if $z-depth == 5 {
        box-shadow: 0 20px 40px rgba($color, $strength * 0.30), 0 15px 12px rgba($color, $strength * 0.22);
    }

    @if ($z-depth < 1) or ( $z-depth > 5 ) {
        @warn "$z-depth must be between 1 and 5";
    }
}

@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin transEase {
    transition: all .15s ease;
}
@mixin transTime($time) {
    transition: all $time ease;
}
    
// Map with much breakpoints
$breakpoints: (
    sm: 768px, 
    md: 1024px, 
    lg: 1301px, 
    xl: 1601px
);

// Respond-To Mixin
@mixin media($size) {
    @if map-has-key($breakpoints, $size) {
        $value: map-get($breakpoints, $size);
        
        @media screen and (max-width: $value) {
            @content
        }
    }
    @warn "Unknown `#{$size}` in $breakpoints";
}